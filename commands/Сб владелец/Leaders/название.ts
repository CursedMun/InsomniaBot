import { Command, Discord } from "discore.js";
import { removeExtraSpaces } from "../../../util/functions";
import Constants from "../../../util/Constants";
import {
  withdrawTaxs,
} from "../../../Methods/allRelatedToCurrency";

export default class extends Command {
  get options() {
    return {
      name: "—Å–æ–æ–±—â–µ—Å—Ç–≤–æ –Ω–∞–∑–≤–∞–Ω–∏–µ",
      aliases: "—Å–± –Ω–∞–∑–≤–∞–Ω–∏–µ",
    };
  }
  get customOptions() {
    return {
      group: "clans",
      help: "–ü–æ–º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (—Å—Ç–æ–∏–º–æ—Å—Ç—å: 500 –∑–≤—ë–∑–¥ —Å –∫–∞–ø–∏—Ç–∞–ª–∞)",
      syntax: `${this.client.prefix}—Å–± –Ω–∞–∑–≤–∞–Ω–∏–µ [–Ω–∞–∑–≤–∞–Ω–∏–µ]`,
      example: `${this.client.prefix}—Å–± –Ω–∞–∑–≤–∞–Ω–∏–µ –ò–Ω—Å–æ–º–Ω–∏—èüí§`,
    };
  }

  async run(message: Discord.Message, args: string[]) {
    const { member, channel, content, guild } = message;
    const Users = this.client.db.getCollection("users")!;
    const Configs = this.client.db.getCollection("configs")!;
    const clans = this.client.db.getCollection("clans")!;

    const msgArr = content.split(" ");
    const arg = removeExtraSpaces(msgArr.slice(2));

    const name = arg.join(" ");
    if (!name) return;

    const data = {
      userId: member!.id,
    };

    const price = 500;
    let user = await Users.findOne(data);

    if (user!.ClubId == null) return;

    if (!user!.isClubOwner && user!.ClubId !== null) {
      const embed = new Discord.MessageEmbed()
        .setColor(member!.displayColor)
        .setAuthor(
          member!.displayName,
          member!.user.displayAvatarURL({ dynamic: true, size: 2048 })
        )
        .setDescription(`–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!`);
      return channel.send(embed);
    } else {
      if (user!.isClubOwner && user!.ClubId !== null) {
        const dataClan = {
          ClubId: user!.ClubId,
        };
        let clan = await clans.findOne(dataClan);
        if (clan!.status == "LOCKED") {
          const embed1 = new Discord.MessageEmbed()
            .setColor(member!.displayColor)
            .setAuthor(
              member!.displayName,
              member!.user.displayAvatarURL({ dynamic: true, size: 2048 })
            )
            .setTitle(`–û—à–∏–±–∫–∞!`)
            .setDescription(
              `–í–∞—à–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∑–∞ –Ω–µ—É–ø–ª–∞—Ç—É –Ω–∞–ª–æ–≥–æ–≤!\n–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!`
            );
          return channel.send(embed1);
        } else {
          withdrawTaxs(clan!.ClubId, price, this.client, Constants.ClanTypes[1]).then(
            async (result) => {
              if (typeof result == "boolean" && !result) {
                const embed2 = new Discord.MessageEmbed()
                  .setColor(member!.displayColor)
                  .setAuthor(
                    member!.displayName,
                    member!.user.displayAvatarURL({ dynamic: true, size: 2048 })
                  )
                  .setDescription(`–£ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–≤—ë–∑–¥!`)
                  .setFooter(
                    `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É - "!—Å–± –ø—Ä–æ—Ñ–∏–ª—å", —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.`
                  );
                return channel.send(embed2);
              } else {
                const text = guild!.channels.cache.get(clan!.clanChat);
                const role = guild!.roles.cache.get(clan!.clanRole);
                await text!.edit({ name });
                await role!.edit({ name });
                await clans.updateOne(dataClan, { name: name });

                const embed3 = new Discord.MessageEmbed()
                  .setColor(role!.color)
                  .setAuthor(
                    member!.displayName,
                    member!.user.displayAvatarURL({ dynamic: true, size: 2048 })
                  )
                  .setTitle(`–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏–∑–º–µ–Ω–µ–Ω–æ!`)
                  .setDescription(`–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${role}`);
                return channel.send(embed3);
              }
            }
          );
        }
      } else return;
    }
  }
}
